/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthProjectsIndexRouteImport } from './routes/_auth/projects/index'
import { Route as AuthProjectsProjectIdRouteImport } from './routes/_auth/projects.$projectId'

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthProjectsIndexRoute = AuthProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthProjectsProjectIdRoute = AuthProjectsProjectIdRouteImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/projects/$projectId': typeof AuthProjectsProjectIdRoute
  '/projects': typeof AuthProjectsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/projects/$projectId': typeof AuthProjectsProjectIdRoute
  '/projects': typeof AuthProjectsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/projects/$projectId': typeof AuthProjectsProjectIdRoute
  '/_auth/projects/': typeof AuthProjectsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/projects/$projectId' | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/projects/$projectId' | '/projects'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_auth/projects/$projectId'
    | '/_auth/projects/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/projects/': {
      id: '/_auth/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AuthProjectsIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/projects/$projectId': {
      id: '/_auth/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof AuthProjectsProjectIdRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthProjectsProjectIdRoute: typeof AuthProjectsProjectIdRoute
  AuthProjectsIndexRoute: typeof AuthProjectsIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthProjectsProjectIdRoute: AuthProjectsProjectIdRoute,
  AuthProjectsIndexRoute: AuthProjectsIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
